<<<<<<< HEAD
# 🛠️ Repositório de Arquivos de Configuração

[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)
[![Autor: Sebastião Alves](https://img.shields.io/badge/autor-Sebastião%20Alves-blueviolet)](https://github.com/profsebastiao)
[![LinkedIn](https://img.shields.io/badge/LinkedIn-%231877F2.svg?logo=linkedin&logoColor=white)](https://www.linkedin.com/in/profsebastiao/)

Este repositório tem como propósito **armazenar e organizar diversos arquivos de configuração**, utilizados em projetos, servidores, ambientes de desenvolvimento e ferramentas em geral.

---

## 🎯 Finalidade

Manter um repositório centralizado para facilitar:

- O reaproveitamento de configurações entre projetos
- A padronização de ambientes
- A rápida recuperação de arquivos úteis
- O versionamento e controle de alterações

> ⚠️ **Atenção**: Este repositório **não contém código-fonte de projetos**, apenas **arquivos de configuração**.

---

## 📂 Tipos de Configurações Armazenadas

Este repositório pode conter arquivos relacionados a:

- 🌐 Servidores Web (Nginx, Apache)
- 🐘 Worspress, PHP, Laravel, JavaScript, Python e outras linguagens
- 🐬 Banco de Dados (MySQL, PostgreSQL, Redis)
- 🐳 Ferramentas DevOps (Docker, Docker Compose, CI/CD, GitHub Actions)
- ⚙️ Systemd, Supervisor e outros serviços
- 🧪 Ambientes de desenvolvimento (VS Code, Shell, Git)
- 🎨 **Ferramentas Gráficas**: Photoshop, Photopea, GIMP (presets, templates, perfis de cor, configurações)
- 📄 Arquivos `.env.example` para configuração de ambientes
  

## 🗂️ Estrutura Sugerida

Organize os arquivos por tecnologia ou finalidade:


---

## 🤝 Contribuições

Contribuições são muito bem-vindas!  
Se você tem arquivos úteis ou sugestões de melhoria, sinta-se à vontade para abrir uma issue ou pull request.

---

## 📜 Licença

Distribuído sob a licença [MIT](LICENSE).  
Você pode usar, modificar e compartilhar os arquivos conforme necessário.

---

> Desenvolvido e mantido por [**Sebastião Alves**](https://github.com/profsebastiao)  
> 🔗 [LinkedIn](https://www.linkedin.com/in/profsebastiao/) | 🌐 [GitHub](https://github.com/profsebastiao)


=======
# 🚀 Implantação do Portainer via Docker Swarm

Gerencie seus contêineres Docker de forma moderna e visual com o **Portainer Community Edition (CE)**. Este guia mostra como instalar e configurar rapidamente uma stack do Portainer em modo **Swarm**, utilizando um arquivo YAML automatizado via script Bash.

---

## ✅ Pré-requisitos

Antes de iniciar a implantação, certifique-se de ter:

- 🐳 Docker instalado (`https://docs.docker.com/get-docker`)
- 🧠 Swarm inicializado: `docker swarm init`
- 🔑 Permissão de sudo
- 🌐 Acesso às portas `9400`, `9443` ou `8000`

---

## 📜 Script de Instalação

Crie um arquivo `install-portainer.sh` com o conteúdo abaixo:

```bash
#!/bin/bash

# Gera o arquivo YAML para a stack do Portainer no Swarm
cat << EOF > portainer-swarm.yml
version: '3.7'
services:
  portainer:
    image: portainer/portainer-ce:lts
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    ports:
      - "9400:9000"
      - "9443:9443"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

  portainer_agent:
    image: portainer/agent:lts
    deploy:
      mode: global
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - "9001:9001"
    restart: always

volumes:
  portainer_data:
EOF

# Implanta a stack no Swarm
sudo docker stack deploy -c portainer-swarm.yml portainer

# Aguarda inicialização
sleep 10

# Verificações
echo "✅ Verificando serviços, contêineres e imagens..."

sudo docker service ls
sudo docker ps -a
sudo docker images

# Instruções de acesso
echo "🌐 Acesse o Portainer:"
echo "   ➤ http://<SEU-IP>:9400 (HTTP)"
echo "   ➤ https://<SEU-IP>:9443 (HTTPS)"
```

---

## 🧭 Acesso à Interface Web

Após executar o script, acesse:

| Protocolo | URL exemplo                      |
|-----------|----------------------------------|
| 🔓 HTTP   | `http://10.83.0.9:9400`          |
| 🔐 HTTPS  | `https://10.83.0.9:9443`         |

Na primeira visita:

1. 👤 Crie um usuário administrador
2. 🌐 Selecione o ambiente (local, remoto, etc.)

---

## 🧩 Estrutura da Stack

| Serviço           | Descrição                                         |
|-------------------|---------------------------------------------------|
| `portainer`       | UI Web e Backend do Portainer                     |
| `portainer_agent` | Agente executado em todos os nós do Swarm         |

| Porta  | Função                            |
|--------|-----------------------------------|
| 9400   | Interface Web (HTTP)              |
| 9443   | Interface Web (HTTPS - recomendado) |
| 8000   | Edge Agent                        |
| 9001   | Comunicação entre Server e Agent  |

---

## 🧪 Verificações pós-instalação

Execute os seguintes comandos para validar:

```bash
docker service ls        # Serviços ativos
docker ps -a             # Contêineres em execução
docker images            # Imagens baixadas
```

---

## 🧯 Possíveis problemas

| Sintoma                           | Causa provável                             | Solução                         |
|----------------------------------|--------------------------------------------|----------------------------------|
| ❌ Porta 9400 não responde        | Firewall ou NAT bloqueando                 | Use porta 9443 ou libere portas |
| 🛑 Serviço não sobe               | Nó não é manager                           | `docker node ls`                |
| 🚫 Stack não é criada            | Swarm não inicializado                     | `docker swarm init`             |

---

## 📁 Arquivos gerados

- `portainer-swarm.yml`: Stack Docker Compose no formato Swarm
- Contêineres:
  - `portainer_portainer`
  - `portainer_portainer_agent`

---

## 📚 Referências

- 🔗 [Portainer Docs](https://docs.portainer.io/)
- 🐳 [Docker Swarm](https://docs.docker.com/engine/swarm/)

---

## 🧠 Autor

**Sebastião Bastos**  
🔧 Canal: Auto Restauração  
🌐 [LinkedIn](https://www.linkedin.com/in/profsebastiao) | [GitHub](https://github.com/profsebastiao)
>>>>>>> e605f5b (documentação de diversas)
